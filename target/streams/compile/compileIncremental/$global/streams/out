[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/src/main/scala/Sample.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/src/main/scala/connection/MySQLDBImpl.scala, /Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/src/main/scala/dao/DogDao.scala, /Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/src/main/scala/model/Dog.scala, /Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/src/main/scala/Server.scala, /Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/src/main/scala/http/DogRoute.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Sample)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 5 sources: invalidated sources (6) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 5 Scala sources to /Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/target/scala-2.11/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.2:compile for Scala 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.2:compile for Scala 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler e6dbb2 for Scala compiler version 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/classes:/Users/ogaimasataka/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/ogaimasataka/Documents/programming/source/scala/scala-sample-api/target/scala-2.11/classes:/Users/ogaimasataka/.ivy2/cache/com.typesafe.akka/akka-http-experimental_2.11/jars/akka-http-experimental_2.11-2.4.10.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.akka/akka-http-core_2.11/jars/akka-http-core_2.11-2.4.10.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.akka/akka-stream_2.11/jars/akka-stream_2.11-2.4.10.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.4.10.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe/config/bundles/config-1.3.0.jar:/Users/ogaimasataka/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.11/bundles/scala-java8-compat_2.11-0.7.0.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe/ssl-config-akka_2.11/bundles/ssl-config-akka_2.11-0.2.1.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe/ssl-config-core_2.11/bundles/ssl-config-core_2.11-0.2.1.jar:/Users/ogaimasataka/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.4.jar:/Users/ogaimasataka/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.0.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.akka/akka-parsing_2.11/jars/akka-parsing_2.11-2.4.10.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.akka/akka-http-spray-json-experimental_2.11/jars/akka-http-spray-json-experimental_2.11-2.4.10.jar:/Users/ogaimasataka/.ivy2/cache/io.spray/spray-json_2.11/bundles/spray-json_2.11-1.3.2.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.slick/slick_2.11/bundles/slick_2.11-3.1.1.jar:/Users/ogaimasataka/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.10.jar:/Users/ogaimasataka/.ivy2/cache/com.typesafe.slick/slick-hikaricp_2.11/bundles/slick-hikaricp_2.11-3.1.1.jar:/Users/ogaimasataka/.ivy2/cache/com.zaxxer/HikariCP-java6/bundles/HikariCP-java6-2.3.7.jar:/Users/ogaimasataka/.ivy2/cache/org.javassist/javassist/bundles/javassist-3.19.0-GA.jar:/Users/ogaimasataka/.ivy2/cache/mysql/mysql-connector-java/jars/mysql-connector-java-5.1.38.jar:/Users/ogaimasataka/.ivy2/cache/org.slf4j/slf4j-nop/jars/slf4j-nop-1.6.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 13.565877276 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from model.DogList...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(model.DogList)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(model.DogList)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(model.DogList,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]), UsedName(DogList,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(dogs,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(model;DogList;init;,[Default]))) invalidates 1 classes due to The model.DogList has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]), UsedName(DogList,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(dogs,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]), UsedName(model;DogList;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(model.DogList)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from connection.MySqlDB...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(connection.MySqlDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(connection.MySqlDB)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(connection.MySqlDB,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(MySqlDB,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(connectionPool,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The connection.MySqlDB has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(MySqlDB,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(connectionPool,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(connection.MySqlDB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Sample...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Sample)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Sample)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Sample,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(Sample,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Sample has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(Sample,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Sample)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from model.DogTable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(model.DogTable)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding dao.DogDao by model.DogTable[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Server by dao.DogDao[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Server, model.DogTable, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of model.DogTable are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	dao.DogDao[0m
[0m[[0m[0mdebug[0m] [0m[0m	http.DogRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of dao.DogDao are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Server[0m
[0m[[0m[0mdebug[0m] [0m[0m	http.DogRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(model.DogTable,ModifiedNames(changes = UsedName(seqFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(productElement2Field,[Default]), UsedName(jsonFormat17,[Default]), UsedName(notify,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(dogFormat,[Implicit]), UsedName(synchronized,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat5,[Default]), UsedName(jsonFormat11,[Default]), UsedName(!=,[Default]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(jsonFormat22,[Default]), UsedName(clone,[Default]), UsedName(viaSeq,[Default]), UsedName(tuple7Format,[Implicit]), UsedName(rootJsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(safeReader,[Default]), UsedName(jsonFormat20,[Default]), UsedName(jsonFormat,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(extractFieldNames,[Default]), UsedName(eq,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(jsonFormat3,[Default]), UsedName($init$,[Default]), UsedName(setFormat,[Implicit]), UsedName(OptionFormat,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(DogTable,[Default]), UsedName(jsonFormat8,[Default]), UsedName(CharJsonFormat,[Implicit]), UsedName(isInstanceOf,[Default]), UsedName(jsonFormat18,[Default]), UsedName(wait,[Default]), UsedName(UnitJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(jsonFormat10,[Default]), UsedName(vectorFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(jsonFormat6,[Default]), UsedName(fromField,[Default]), UsedName(jsonFormat4,[Default]), UsedName(rootFormat,[Default]), UsedName(IntJsonFormat,[Implicit]), UsedName(delegate,[Default]), UsedName(jsonFormat16,[Default]), UsedName(ne,[Default]), UsedName(read,[Default]), UsedName(jsonFormat9,[Default]), UsedName(jsonFormat21,[Default]), UsedName(lift,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(dogListFormat,[Implicit]), UsedName(JF,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(mapFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat2,[Default]), UsedName(jsonFormat19,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(notifyAll,[Default]), UsedName(jsonFormat12,[Default]), UsedName(equals,[Default]), UsedName(jsonFormat13,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName($isInstanceOf,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(toString,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(jsonFormat14,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(write,[Default]), UsedName(optionFormat,[Implicit]))) invalidates 4 classes due to The model.DogTable has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(seqFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(dogFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(dogListFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(optionFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Server, model.DogTable, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(http.DogRoutes, dao.DogDao, Server)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from model.Dog...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(model.Dog)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(model.Dog)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of Server: Set(UsedName(Dog,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of http.DogRoutes: Set(UsedName(name,[Default]), UsedName(id,[Default]), UsedName(Dog,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dao.DogDao: Set(UsedName(id,[Default]), UsedName(Dog,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(model.Dog,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(model;Dog;init;,[Default]), UsedName(name,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]), UsedName(id,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(Dog,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(copy$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]))) invalidates 4 classes due to The model.Dog has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(model;Dog;init;,[Default]), UsedName(name,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]), UsedName(productIterator,[Default]), UsedName(id,[Default]), UsedName(productElement,[Default]), UsedName($init$,[Default]), UsedName(Dog,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(copy$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(productArity,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(copy,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(model.Dog)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Server, http.DogRoutes, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from model.DogTable.DogTable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(model.DogTable.DogTable)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(model.DogTable.DogTable)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dao.DogDao: Set(UsedName(id,[Default]), UsedName(model;DogTable;DogTable;init;,[Default]), UsedName(DogTable,[Default]), UsedName(TableElementType,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(model.DogTable.DogTable,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(tableProvider,[Default]), UsedName(!=,[Default]), UsedName(tableNode,[Default]), UsedName(foreignKey,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tableConstraints,[Default]), UsedName(*,[Default]), UsedName(primaryKey,[Default]), UsedName(eq,[Default]), UsedName(toNode,[Default]), UsedName(id,[Default]), UsedName(schemaName,[Default]), UsedName(index$default$3,[Default]), UsedName(model;DogTable;DogTable;init;,[Default]), UsedName(index,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(indexes,[Default]), UsedName($init$,[Default]), UsedName(tableTag,[Default]), UsedName(DogTable,[Default]), UsedName(encodeRef,[Default]), UsedName(TableElementType,[Default]), UsedName(isInstanceOf,[Default]), UsedName(create_*,[Default]), UsedName(wait,[Default]), UsedName(O,[Default]), UsedName(ne,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(tableName,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(column,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(primaryKeys,[Default]), UsedName(foreignKeys,[Default]))) invalidates 2 classes due to The model.DogTable.DogTable has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(tableProvider,[Default]), UsedName(!=,[Default]), UsedName(tableNode,[Default]), UsedName(foreignKey,[Default]), UsedName(name,[Default]), UsedName(clone,[Default]), UsedName(tableConstraints,[Default]), UsedName(*,[Default]), UsedName(primaryKey,[Default]), UsedName(eq,[Default]), UsedName(toNode,[Default]), UsedName(id,[Default]), UsedName(schemaName,[Default]), UsedName(index$default$3,[Default]), UsedName(model;DogTable;DogTable;init;,[Default]), UsedName(index,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(indexes,[Default]), UsedName($init$,[Default]), UsedName(tableTag,[Default]), UsedName(DogTable,[Default]), UsedName(encodeRef,[Default]), UsedName(TableElementType,[Default]), UsedName(isInstanceOf,[Default]), UsedName(create_*,[Default]), UsedName(wait,[Default]), UsedName(O,[Default]), UsedName(ne,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(tableName,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]), UsedName(column,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(primaryKeys,[Default]), UsedName(foreignKeys,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(model.DogTable.DogTable)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from connection.MySQLDBImpl...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(connection.MySQLDBImpl)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding dao.DogDao by connection.MySQLDBImpl[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Server by dao.DogDao[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Server, connection.MySQLDBImpl, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dao.DogDao: Set(UsedName(MySQLDBImpl,[Default]), UsedName(driver,[Default]), UsedName(db,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of model.DogTable.DogTable: Set(UsedName(MySQLDBImpl,[Default]), UsedName(driver,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of model.DogTable: Set(UsedName(MySQLDBImpl,[Default]), UsedName(driver,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of Server. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of http.DogRoutes. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(connection.MySQLDBImpl,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MySQLDBImpl,[Default]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(eq,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(db,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]))) invalidates 5 classes due to The connection.MySQLDBImpl has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(MySQLDBImpl,[Default]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(eq,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(db,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Server, connection.MySQLDBImpl, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(dao.DogDao, model.DogTable.DogTable, model.DogTable)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dao.DogDao...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Server by dao.DogDao[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Server, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of dao.DogDao are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Server[0m
[0m[[0m[0mdebug[0m] [0m[0m	http.DogRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dao.DogDao,ModifiedNames(changes = UsedName(seqFormat,[Implicit]), UsedName(getClass,[Default]), UsedName(productElement2Field,[Default]), UsedName(jsonFormat17,[Default]), UsedName(notify,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(getById,[Default]), UsedName(dogFormat,[Implicit]), UsedName(synchronized,[Default]), UsedName(dogTableAutoInc,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(jsonFormat5,[Default]), UsedName(jsonFormat11,[Default]), UsedName(!=,[Default]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(jsonFormat22,[Default]), UsedName(clone,[Default]), UsedName(viaSeq,[Default]), UsedName(tuple7Format,[Implicit]), UsedName(update,[Default]), UsedName(rootJsonFormat,[Default]), UsedName(tuple4Format,[Implicit]), UsedName(driver,[Default]), UsedName(safeReader,[Default]), UsedName(jsonFormat20,[Default]), UsedName(jsonFormat,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(extractFieldNames,[Default]), UsedName(eq,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(getAll,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(create,[Default]), UsedName(jsonFormat3,[Default]), UsedName($init$,[Default]), UsedName(setFormat,[Implicit]), UsedName(OptionFormat,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(DogTable,[Default]), UsedName(jsonFormat8,[Default]), UsedName(CharJsonFormat,[Implicit]), UsedName(isInstanceOf,[Default]), UsedName(jsonFormat18,[Default]), UsedName(wait,[Default]), UsedName(UnitJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(jsonFormat10,[Default]), UsedName(vectorFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(jsonFormat6,[Default]), UsedName(fromField,[Default]), UsedName(jsonFormat4,[Default]), UsedName(rootFormat,[Default]), UsedName(IntJsonFormat,[Implicit]), UsedName(delegate,[Default]), UsedName(jsonFormat16,[Default]), UsedName(ne,[Default]), UsedName(read,[Default]), UsedName(jsonFormat9,[Default]), UsedName(jsonFormat21,[Default]), UsedName(lift,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(dogListFormat,[Implicit]), UsedName(JF,[Default]), UsedName(ddl,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(mapFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat2,[Default]), UsedName(jsonFormat19,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(notifyAll,[Default]), UsedName(jsonFormat12,[Default]), UsedName(equals,[Default]), UsedName(jsonFormat13,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName($isInstanceOf,[Default]), UsedName(db,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(toString,[Default]), UsedName(dogTableQuery,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(DogDao,[Default]), UsedName(##,[Default]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(delete,[Default]), UsedName(StringJsonFormat,[Implicit]), UsedName(jsonFormat14,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(write,[Default]), UsedName(optionFormat,[Implicit]))) invalidates 3 classes due to The dao.DogDao has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(seqFormat,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(dogFormat,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(dogListFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(optionFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Server, dao.DogDao)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Server, http.DogRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Server...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Server)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Server)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Server,ModifiedNames(changes = UsedName(seqFormat,[Implicit]), UsedName(sprayJsonMarshaller,[Implicit]), UsedName(getClass,[Default]), UsedName(productElement2Field,[Default]), UsedName(jsonFormat17,[Default]), UsedName(notify,[Default]), UsedName(immSeqFormat,[Implicit]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(getById,[Default]), UsedName(dogFormat,[Implicit]), UsedName(synchronized,[Default]), UsedName(main,[Default]), UsedName(sprayJsonMarshaller$default$2,[Default]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(Server,[Default]), UsedName(dogTableAutoInc,[Default]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(lazyFormat,[Default]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(jsonFormat5,[Default]), UsedName(jsonFormat11,[Default]), UsedName(!=,[Default]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(jsonFormat22,[Default]), UsedName(clone,[Default]), UsedName(viaSeq,[Default]), UsedName(tuple7Format,[Implicit]), UsedName(update,[Default]), UsedName(rootJsonFormat,[Default]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(delayedInit,[Default]), UsedName(driver,[Default]), UsedName(dispatcher,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(safeReader,[Default]), UsedName(jsonFormat20,[Default]), UsedName(jsonFormat,[Default]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(jsonFormat1,[Default]), UsedName(productElement2Field$default$4,[Default]), UsedName(immSetFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(extractFieldNames,[Default]), UsedName(eq,[Default]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(executionStart,[Default]), UsedName(getAll,[Default]), UsedName(arrayFormat,[Implicit]), UsedName(create,[Default]), UsedName(jsonFormat3,[Default]), UsedName($init$,[Default]), UsedName(setFormat,[Implicit]), UsedName(OptionFormat,[Default]), UsedName(indexedSeqFormat,[Implicit]), UsedName(jsonFormat15,[Default]), UsedName(DogTable,[Default]), UsedName(jsonFormat8,[Default]), UsedName(CharJsonFormat,[Implicit]), UsedName(isInstanceOf,[Default]), UsedName(jsonFormat18,[Default]), UsedName(routes,[Default]), UsedName(wait,[Default]), UsedName(UnitJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(jsonFormat10,[Default]), UsedName(vectorFormat,[Implicit]), UsedName(jsonFormat0,[Default]), UsedName(jsonFormat6,[Default]), UsedName(fromField,[Default]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(jsonFormat4,[Default]), UsedName(sprayJsonMarshallerConverter$default$2,[Default]), UsedName(rootFormat,[Default]), UsedName(IntJsonFormat,[Implicit]), UsedName(delegate,[Default]), UsedName(system,[Implicit]), UsedName(jsonFormat16,[Default]), UsedName(args,[Default]), UsedName(ne,[Default]), UsedName(read,[Default]), UsedName(jsonFormat9,[Default]), UsedName(jsonFormat21,[Default]), UsedName(lift,[Default]), UsedName(ByteJsonFormat,[Implicit]), UsedName(dogListFormat,[Implicit]), UsedName(JF,[Default]), UsedName(ddl,[Default]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(mapFormat,[Implicit]), UsedName(jsonFormat7,[Default]), UsedName(tuple1Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(finalize,[Default]), UsedName(jsonFormat2,[Default]), UsedName(jsonFormat19,[Default]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(notifyAll,[Default]), UsedName(jsonFormat12,[Default]), UsedName(equals,[Default]), UsedName(jsonFormat13,[Default]), UsedName(linearSeqFormat,[Implicit]), UsedName(hashCode,[Default]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName($isInstanceOf,[Default]), UsedName(sprayJsValueMarshaller$default$1,[Default]), UsedName(materializer,[Implicit]), UsedName(db,[Default]), UsedName(immIterableFormat,[Implicit]), UsedName(toString,[Default]), UsedName(dogTableQuery,[Default]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(==,[Default]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(##,[Default]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(delete,[Default]), UsedName(StringJsonFormat,[Implicit]), UsedName(jsonFormat14,[Default]), UsedName(JsValueFormat,[Implicit]), UsedName(write,[Default]), UsedName(optionFormat,[Implicit]))) invalidates 1 classes due to The Server has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(seqFormat,[Implicit]), UsedName(sprayJsonMarshaller,[Implicit]), UsedName(immSeqFormat,[Implicit]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(dogFormat,[Implicit]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(tuple2Format,[Implicit]), UsedName(tuple6Format,[Implicit]), UsedName(iterableFormat,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(RootJsObjectFormat,[Implicit]), UsedName(tuple7Format,[Implicit]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(tuple4Format,[Implicit]), UsedName(dispatcher,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(SymbolJsonFormat,[Implicit]), UsedName(tuple5Format,[Implicit]), UsedName(FloatJsonFormat,[Implicit]), UsedName(immSetFormat,[Implicit]), UsedName(tuple3Format,[Implicit]), UsedName(immIndexedSeqFormat,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(arrayFormat,[Implicit]), UsedName(setFormat,[Implicit]), UsedName(indexedSeqFormat,[Implicit]), UsedName(CharJsonFormat,[Implicit]), UsedName(UnitJsonFormat,[Implicit]), UsedName(ShortJsonFormat,[Implicit]), UsedName(LongJsonFormat,[Implicit]), UsedName(vectorFormat,[Implicit]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(IntJsonFormat,[Implicit]), UsedName(system,[Implicit]), UsedName(ByteJsonFormat,[Implicit]), UsedName(dogListFormat,[Implicit]), UsedName(immLinearSeqFormat,[Implicit]), UsedName(mapFormat,[Implicit]), UsedName(tuple1Format,[Implicit]), UsedName(eitherFormat,[Implicit]), UsedName(RootJsArrayFormat,[Implicit]), UsedName(linearSeqFormat,[Implicit]), UsedName(BigDecimalJsonFormat,[Implicit]), UsedName(materializer,[Implicit]), UsedName(immIterableFormat,[Implicit]), UsedName(BooleanJsonFormat,[Implicit]), UsedName(BigIntJsonFormat,[Implicit]), UsedName(DoubleJsonFormat,[Implicit]), UsedName(listFormat,[Implicit]), UsedName(StringJsonFormat,[Implicit]), UsedName(JsValueFormat,[Implicit]), UsedName(optionFormat,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Server)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from http.DogRoutes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(http.DogRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Server by http.DogRoutes[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Server, http.DogRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of http.DogRoutes are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Server[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(http.DogRoutes,ModifiedNames(changes = UsedName(sprayJsonMarshaller,[Implicit]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(synchronized,[Default]), UsedName(sprayJsonMarshaller$default$2,[Default]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(!=,[Default]), UsedName(clone,[Default]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(dispatcher,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(eq,[Default]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(routes,[Default]), UsedName(wait,[Default]), UsedName(sprayJsonSourceReader,[Implicit]), UsedName(sprayJsonMarshallerConverter$default$2,[Default]), UsedName(ne,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(DogRoutes,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sprayJsValueMarshaller$default$1,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(##,[Default]))) invalidates 2 classes due to The http.DogRoutes has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(sprayJsonMarshaller,[Implicit]), UsedName(sprayJsValueUnmarshaller,[Implicit]), UsedName(sprayJsValueMarshaller,[Implicit]), UsedName(sprayJsonMarshallerConverter,[Implicit]), UsedName(sprayJsonByteStringUnmarshaller,[Implicit]), UsedName(dispatcher,[Implicit]), UsedName(sprayJsonUnmarshaller,[Implicit]), UsedName(sprayJsonUnmarshallerConverter,[Implicit]), UsedName(sprayJsonSourceReader,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Server, http.DogRoutes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(Server)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
